{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/file.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/file.js","webpack://backend/external \"path\"","webpack://backend/external \"fs\"","webpack://backend/external \"require3\"","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/model/file.js","webpack://backend/./backend/src/model/fileView.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,CAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,CAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;;;;;;;ACDA,gBAAgB,mBAAO,CAAC,CAAyB;AACjD,aAAa,mBAAO,CAAC,CAAsB;;AAE3C;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA,KAAK,+DAA+D,QAAQ,aAAa,EAAE,EAAE;AAC7F,KAAK,yFAAyF;AAC9F,KAAK;AACL,aAAa,SAAS,0BAA0B,EAAE;AAClD,KAAK;AACL,KAAK;AACL,aAAa,SAAS,0BAA0B,EAAE;AAClD,KAAK;AACL,KAAK,+GAA+G;AACpH;AACA;AACA;;;;;;;ACrBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;;;;;;AChDA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,aAAa,mBAAO,CAAC,EAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACrDA,aAAa,mBAAO,CAAC,EAAM;AAC3B,WAAW,mBAAO,CAAC,EAAI;AACvB,iBAAiB,mBAAO,CAAC,EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,aAAa,SAAS,QAAQ;AAChD;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA,wCAAwC,aAAa;AACrD;AACA;AACA,6CAA6C,aAAa,iBAAiB,QAAQ;AACnF;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,uDAAuD,GAAG,2BAA2B;AACvH;AACA;AACA,+CAA+C,UAAU,EAAE,aAAa;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,+CAA+C,OAAO,SAAS,SAAS,gBAAgB,QAAQ;AAChG;;AAEA;AACA,iDAAiD,0CAA0C;AAC3F;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA,qCAAqC,WAAW,EAAE,0CAA0C;AAC5F;AACA;;AAEA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,aAAa;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,WAAW,cAAc,GAAG,SAAS,EAAE,aAAa;AACpD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,wDAAwD,oBAAoB,kCAAkC,EAAE,aAAa;AAC7H;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,aAAa;AAC/D;;AAEA;AACA;AACA,iDAAiD,cAAc,EAAE,aAAa;AAC9E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc,GAAG,aAAa,GAAG,cAAc;AACzE;AACA,WAAW,cAAc,GAAG,SAAS,EAAE,aAAa;AACpD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,cAAc,GAAG,cAAc,EAAE,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,2EAA2E;AAC1F;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,QAAQ,aAAa,QAAQ;AACxF;AACA;;AAEA;;AAEA;AACA;;;;;;;ACtQA,iC;;;;;;ACAA,+B;;;;;;ACAA,qC;;;;;;ACAA,aAAa,mBAAO,CAAC,EAAiB;AACtC,iBAAiB,mBAAO,CAAC,EAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA,kBAAkB,2BAA2B,wBAAwB,EAAE;AACvE;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,+BAA+B,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;;;;;;;ACPA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  File: '文件',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","const version = require('./controller/version.js');\nconst file = require('./controller/file.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n    // file\n    { method: 'post', path: 'file/upload', controller: file, meta: { auth: { user: true } } },\n    { method: 'get', path: 'file/download/:downloadId', controller: file, action: 'download' },\n    { method: 'post', path: 'file/list', controller: file,\n      meta: { right: { type: 'atom', action: 2 } },\n    },\n    { method: 'post', path: 'file/delete', controller: file, middlewares: 'transaction',\n      meta: { right: { type: 'atom', action: 3 } },\n    },\n    { method: 'get', path: 'file/fileInfo/:downloadId', controller: file, action: 'fileInfo', middlewares: 'inner' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class FileController extends app.Controller {\n\n    async list() {\n      const options = this.ctx.request.body.options;\n      options.page = this.ctx.meta.util.page(options.page, false);\n      const items = await this.ctx.service.file.list({\n        key: this.ctx.request.body.key,\n        options,\n        user: this.ctx.user.op,\n      });\n      this.ctx.successMore(items, options.page.index, options.page.size);\n    }\n\n    async delete() {\n      const res = await this.ctx.service.file.delete({\n        key: this.ctx.request.body.key,\n        data: this.ctx.request.body.data,\n        user: this.ctx.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n    async upload() {\n      const res = await this.service.file.upload({\n        user: this.ctx.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n    async download() {\n      await this.service.file.download({\n        downloadId: this.ctx.params.downloadId,\n        width: this.ctx.query.width,\n        height: this.ctx.query.height,\n        user: this.ctx.user.op,\n      });\n    }\n\n    // inner invoke\n    async fileInfo() {\n      await this.service.file.fileInfo({\n        downloadId: this.ctx.params.downloadId,\n      });\n    }\n\n  }\n  return FileController;\n};\n","const version = require('./service/version.js');\nconst file = require('./service/file.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    file,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aFile\n        let sql = `\n          CREATE TABLE aFile (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            userId int(11) DEFAULT '0',\n            downloadId varchar(50) DEFAULT NULL,\n            atomId int(11) DEFAULT '0',\n            mode int(11) DEFAULT '0',\n            fileSize int(11) DEFAULT '0',\n            width int(11) DEFAULT '0',\n            height int(11) DEFAULT '0',\n            filePath varchar(255) DEFAULT NULL,\n            fileName varchar(255) DEFAULT NULL,\n            realName varchar(255) DEFAULT NULL,\n            fileExt varchar(50) DEFAULT NULL,\n            encoding varchar(50) DEFAULT NULL,\n            mime varchar(50) DEFAULT NULL,\n            attachment int(11) DEFAULT '0',\n            flag varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // aViewFile\n        sql = `\n          create view aViewFile as\n            select a.*,b.userName,b.avatar from aFile a\n              left join aUser b on a.userId=b.id\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","const path = require('path');\nconst fs = require('fs');\nconst require3 = require('require3');\nconst sendToWormhole = require3('stream-wormhole');\nconst uuid = require3('uuid');\nconst gm = require3('gm');\nconst bb = require3('bluebird');\nconst pump = require3('pump');\nconst fse = require3('fs-extra');\n\nmodule.exports = app => {\n\n  class File extends app.Service {\n\n    async list({ key, options, user }) {\n      const _options = {};\n      // where\n      _options.where = options.where || {};\n      _options.where.atomId = key.atomId;\n      // orders\n      _options.orders = options.orders;\n      // page\n      if (options.page.size !== 0) {\n        _options.limit = options.page.size;\n        _options.offset = options.page.index;\n      }\n      // select\n      const list = await this.ctx.model.fileView.select(_options);\n      for (const item of list) {\n        item.downloadUrl = this.getDownloadUrl(item);\n      }\n      return list;\n    }\n\n    async delete({ key, data: { fileId }, user }) {\n      // file\n      const item = await this.ctx.model.file.get({ id: fileId });\n      if (key.atomId !== item.atomId || item.userId !== user.id) this.ctx.throw(403);\n      // delete\n      await this.ctx.model.file.delete({ id: fileId });\n      // attachmentCount\n      if (item.atomId && item.attachment) {\n        await this.ctx.meta.atom.attachment({ key, atom: { attachment: -1 }, user });\n      }\n    }\n\n    async upload({ user }) {\n      const stream = await this.ctx.getFileStream();\n      try {\n        // info\n        const fileInfo = path.parse(stream.filename);\n        const encoding = stream.encoding;\n        const mime = stream.mime;\n        const fields = stream.fields;\n        const mode = parseInt(fields.mode || 2);\n        const atomId = parseInt(fields.atomId || 0);\n        const attachment = parseInt(fields.attachment || 0);\n        const flag = fields.flag || '';\n        let imgWidth = 0;\n        let imgHeight = 0;\n\n        // dest\n        const downloadId = uuid.v4().replace(/-/g, '');\n        const _filePath = `file/${mode === 1 ? 'image' : (mode === 2 ? 'file' : 'audio')}/${this.ctx.meta.util.today()}`;\n        const _fileName = uuid.v4().replace(/-/g, '');\n        const destDir = await this.ctx.meta.base.getPath(_filePath, true);\n        const destFile = path.join(destDir, `${_fileName}${fileInfo.ext}`);\n\n        // write\n        if (mode === 1) {\n          // image\n          await bb.fromCallback(cb => {\n            let img = gm(stream);\n            if (fields.cropped === 'true') {\n              const cropbox = JSON.parse(fields.cropbox);\n              img = img.crop(parseInt(cropbox.width), parseInt(cropbox.height), parseInt(cropbox.x), parseInt(cropbox.y));\n            }\n            img.quality(93).write(destFile, cb);\n          });\n          // size\n          const imgSize = await bb.fromCallback(cb => {\n            gm(destFile).size(cb);\n          });\n          imgWidth = imgSize.width;\n          imgHeight = imgSize.height;\n        } else if (mode === 2 || mode === 3) {\n          // check right only for file\n          if (mode === 2) {\n            await this.checkRightWrite(atomId, user);\n          }\n          // file\n          const writeStream = fs.createWriteStream(destFile);\n          await bb.fromCallback(cb => {\n            pump(stream, writeStream, cb);\n          });\n        }\n\n        // fileSize\n        const stat = await fse.stat(destFile);\n        const fileSize = stat.size;\n\n        // save\n        const res = await this.ctx.model.file.insert({\n          userId: user.id,\n          downloadId,\n          atomId,\n          mode,\n          fileSize,\n          width: imgWidth,\n          height: imgHeight,\n          filePath: _filePath,\n          fileName: _fileName,\n          realName: fileInfo.name,\n          fileExt: fileInfo.ext,\n          encoding,\n          mime,\n          attachment,\n          flag,\n        });\n        const fileId = res.insertId;\n\n        // attachmentCount\n        if (atomId && attachment) {\n          await this.ctx.meta.atom.attachment({ key: { atomId }, atom: { attachment: 1 }, user });\n        }\n\n        // ok\n        const downloadUrl = this.getDownloadUrl({ downloadId, mode, fileExt: fileInfo.ext });\n        return {\n          fileId,\n          realName: fileInfo.name,\n          downloadId,\n          downloadUrl,\n        };\n\n      } catch (e) {\n        await sendToWormhole(stream);\n        throw e;\n      }\n    }\n\n    getDownloadUrl({ downloadId, mode, fileExt }) {\n      return this.ctx.meta.base.getAbsoluteUrl(\n        `/api/a/file/file/download/${downloadId}${(mode === 1 || mode === 3) ? fileExt : ''}`\n      );\n    }\n\n    async download({ downloadId, width, height, user }) {\n      // downloadId\n      if (!downloadId) this.ctx.throw(404);\n      const extPos = downloadId.indexOf('.');\n      if (extPos > -1) downloadId = downloadId.substr(0, extPos);\n\n      // get file\n      const file = await this.ctx.model.file.get({ downloadId });\n      if (!file) this.ctx.throw(404);\n\n      // pre\n      let fileName = file.fileName;\n      if (file.mode === 1) {\n        // adjust image\n        fileName = await this.adjustImage(file, width, height);\n      } else if (file.mode === 2) {\n        // check right\n        await this.checkRightRead(file.atomId, user);\n      } else if (file.mode === 3) {\n        // do nothing\n      }\n\n      // forward url\n      const forwardUrl = this.ctx.meta.base.getForwardUrl(\n        `${file.filePath}/${fileName}${file.fileExt}`\n      );\n\n      // send\n      if (app.meta.isTest || app.meta.isLocal) {\n        // redirect\n        this.ctx.redirect(forwardUrl);\n      } else {\n        // redirect nginx\n        // this.ctx.set('content-type', file.mime);\n        this.ctx.set('content-transfer-encoding', file.encoding);\n        this.ctx.set('content-disposition', `attachment; filename*=UTF-8''${encodeURIComponent(file.realName)}${file.fileExt}`);\n        this.ctx.set('X-Accel-Redirect', forwardUrl);\n        // this.ctx.success();\n        this.ctx.response.status = 200;\n        this.ctx.response.type = file.mime;\n      }\n\n    }\n\n    // inner invoke\n    async fileInfo({ downloadId }) {\n      // downloadId\n      if (!downloadId) this.ctx.throw(404);\n      const extPos = downloadId.indexOf('.');\n      if (extPos > -1) downloadId = downloadId.substr(0, extPos);\n\n      // get file\n      const file = await this.ctx.model.file.get({ downloadId });\n      if (!file) this.ctx.throw(404);\n\n      // absolutePath\n      const destDir = await this.ctx.meta.base.getPath(file.filePath, true);\n      const absolutePath = path.join(destDir, `${file.fileName}${file.fileExt}`);\n      // ok\n      return {\n        file,\n        absolutePath,\n      };\n    }\n\n    async adjustImage(file, widthRequire, heightRequire) {\n      widthRequire = widthRequire ? parseInt(widthRequire) : 0;\n      heightRequire = heightRequire ? parseInt(heightRequire) : 0;\n      if (!widthRequire && !heightRequire) return file.fileName;\n\n      // cannot use * in path on windows\n      const fileName = `${file.fileName}-${widthRequire}_${heightRequire}`;\n      const destFile = await this.ctx.meta.base.getPath(\n        `${file.filePath}/${fileName}${file.fileExt}`, false\n      );\n\n      const bExists = await fse.pathExists(destFile);\n      if (bExists) return fileName;\n\n      const width = widthRequire || parseInt(file.width * heightRequire / file.height);\n      const height = heightRequire || parseInt(file.height * widthRequire / file.width);\n\n      const srcFile = await this.ctx.meta.base.getPath(\n        `${file.filePath}/${file.fileName}${file.fileExt}`, false\n      );\n      await bb.fromCallback(cb => {\n        gm(srcFile)\n          .resize(width, height, '!')\n          .quality(100)\n          .write(destFile, cb);\n      });\n\n      return fileName;\n    }\n\n    async checkRightWrite(atomId, user) {\n      // not check if !atomId\n      if (!atomId) return;\n      const res = await this.ctx.meta.atom.checkRightUpdate({\n        atom: { id: atomId, action: this.ctx.constant.module('a-base').atom.action.write },\n        user,\n      });\n      if (!res) this.ctx.throw(403);\n    }\n\n    async checkRightRead(atomId, user) {\n      // not check if !atomId\n      if (!atomId) return;\n      const res = await this.ctx.meta.atom.checkRightRead({ atom: { id: atomId }, user });\n      if (!res) this.ctx.throw(403);\n    }\n\n  }\n\n  return File;\n};\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"require3\");","const file = require('./model/file.js');\nconst fileView = require('./model/fileView.js');\n\nmodule.exports = app => {\n  const models = {\n    file,\n    fileView,\n  };\n  return models;\n};\n","module.exports = app => {\n  class File extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aFile', options: { disableDeleted: false } });\n    }\n  }\n  return File;\n};\n","module.exports = app => {\n  class FileView extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aViewFile', options: { disableDeleted: false } });\n    }\n  }\n  return FileView;\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n"],"sourceRoot":""}